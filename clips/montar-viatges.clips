; Input <- output(acotar-ciutats)
; Output -> Dos viatges montats amb el format de l'enunciat


;;		Declaracions i Inicialitzacions



(defmodule fer-solucio "Fa una instancia de solucio" 
	(export deftemplate ?ALL)
	(import tipus_ciutat deftemplate ?ALL)
    (import tipus_usuari deftemplate ?ALL)
	(import preferencies deftemplate ?ALL)
    (import utils deffunction ?ALL)
)

;=================================================
;					Ontologia
;=================================================
; tag-inici-ontologia



; tag-fi-ontologia



;;================================================
;;				Inici del m√≤dul
;;================================================


(definstances solucions
	([Possible-Solucio1] of Solucio-F (preu-total 0) (duracio-total 0))
	([Possible-Solucio2] of Solucio-F (preu-total 0) (duracio-total 0))
)


;;		Funcions

(deffunction comprovar-activitats (?li ?a)
	(bind ?b FALSE)
	(bind ?i 1)
	(while (and (<= ?i (length ?li)) (not ?b))
		do
		(if (eq (class (nth$ ?i ?li)) ?a) then
			(bind ?b TRUE)
		)
		(bind ?i (+ ?i 1))
	)
	(return ?b)
)

(deffunction triar-ciutats (?li ?n)
	(if (> ?n (length ?li)) then
		(return ?li)
	else 
		(bind ?v (create$))
		(loop-for-count (?i 1 ?n)
			(bind ?aux (random 1 (length ?li)))
			(bind ?v (insert$ ?v 1 (nth$ ?aux ?li)))
			(bind ?li (delete$ ?li ?aux ?aux))
		)
		(return ?v)
	)
)

(deffunction buscar-hotel (?c ?ch)
	(printout t "Crida a buscar-hotel. Ciutat=") (printout t ?c) (printout t " Qualitat=") (printout t ?ch) (printout t crlf)
	(bind ?a (send ?c get-Allotjaments))
	(bind ?i 1)
	(bind ?b FALSE)
	(switch ?ch
		(case alta then
			(while (and (<= ?i (length ?a)) (not ?b))
				do
				(if (eq (str-cat (class (nth$ ?i ?a))) "5Estrella") then
						(bind ?h (nth$ ?i ?a))
						(bind ?b TRUE)
				)
				(bind ?i (+ ?i 1))
			)
		)
		(case mitja then
			(while (and (<= ?i (length ?a)) (not ?b))
				do
				(if (or (eq (str-cat (class (nth$ ?i ?a))) "4Estrella") 
						(eq (str-cat (class (nth$ ?i ?a))) "3Estrella")) then
						(bind ?h (nth$ ?i ?a))
						(bind ?b TRUE)
				)
				(bind ?i (+ ?i 1))
			)
		)
		(case baixa then
			(while (and (<= ?i (length ?a)) (not ?b))
				do
				(if (or (eq (str-cat (class (nth$ ?i ?a))) "1Estrella") 
						(eq (str-cat (class (nth$ ?i ?a))) "2Estrella")) then
						(bind ?h (nth$ ?i ?a))
						(bind ?b TRUE)
				)
				(bind ?i (+ ?i 1))
			)
		)
	)
	(return ?h)
)

(deffunction buscar_activitats (?c ?ta ?ch ?d)
	(bind ?a (send ?c get-Activitats))
	(bind ?v (create$))
	(switch ?ch
		(case alta then
			(bind ?duracio_act 0)
			(bind ?i 1)
			(bind ?b FALSE)
			(while (and (<= ?i (length ?a)) (not ?b))
				do
				(bind ?aux1 (random 1 (length ?a)))
				(bind ?aux2 (send (nth$ ?aux1 ?a) get-durada-activitat))
				(if (eq ?aux2 mig-dia) then
					(if (<= (+ ?duracio_act 0.5) ?d) then
						(bind ?duracio_act (+ ?duracio_act 0.5))
						(bind ?v (insert$ ?v 1 (nth$ ?aux1 ?a)))
					else (bind ?b TRUE)
					)
				else
					(if (<= (+ ?duracio_act 1.0) ?d) then
						(bind ?duracio_act (+ ?duracio_act 1))
						(bind ?v (insert$ ?v 1 (nth$ ?aux1 ?a)))					
					)
				)
				(bind ?a (delete$ ?a ?aux1 ?aux1))
				(bind ?i (+ ?i 1))
			)
		)
		(case mitja then
			(bind ?duracio_act 0)
			(bind ?i 1)
			(bind ?b FALSE)
			(bind ?num_act (+ (/ ?d 2) 1))
			(while (and (<= ?i (length ?a)) (not ?b))
				do
				(bind ?aux1 (random 1 (length ?a)))
				(bind ?aux2 (send (nth$ ?aux1 ?a) get-durada-activitat))
				(if (eq ?aux2 mig-dia) then
					(if (<= (+ ?duracio_act 0.5) ?d) then
						(bind ?duracio_act (+ ?duracio_act 0.5))
						(bind ?v (insert$ ?v 1 (nth$ ?aux1 ?a)))
						(if (> (length ?v) ?num_act)
							then (bind ?b TRUE)
						)
					else (bind ?b TRUE)
					)
				else
					(if (<= (+ ?duracio_act 1.0) ?d) then
						(bind ?duracio_act (+ ?duracio_act 1))
						(bind ?v (insert$ ?v 1 (nth$ ?aux1 ?a)))		
						(if (> (length ?v) ?num_act)
							then (bind ?b TRUE)
						)			
					)
				)
				(bind ?a (delete$ ?a ?aux1 ?aux1))
				(bind ?i (+ ?i 1))
			)
		)
		(case baixa then
			(bind ?aux (random 1 (length ?a)))
			(bind ?v (insert$ ?v 1 (nth$ ?aux ?a)))
		)
	)
	(return ?v)
)

(deffunction calcular-preu (?a ?h)
	(bind ?ph (send ?h get-preu-allotjament))
	(bind ?pa 0)
	(loop-for-count (?i 1 (length ?a))
		(bind ?pa (+ ?pa (send (nth$ ?i ?a) get-preu-activitat)))
	)
	(return (+ ?pa ?ph))
)

(deffunction viatge-alta (?v)
	(if (> (length ?v) 0) then
		(bind ?r (nth$ 1 ?v))
		(loop-for-count (?i 2 (length ?v))
			(if (> (send (nth$ ?i ?v) get-preu-viatge) (send ?r get-preu-viatge)) then
				(bind ?r (nth$ ?i ?v))
			)
		)
	)
	;@BUGFIX Crec que aqui feia falta retornar ?v -setzer22
	(return ?r)
)

(deffunction viatge-baixa (?v)
	(if (> (length ?v) 0) then
		(bind ?r (nth$ 1 ?v))
		(loop-for-count (?i 2 (length ?v))
			(if (< (send (nth$ ?i ?v) get-preu-viatge) (send ?r get-preu-viatge)) then
				(bind ?r (nth$ ?i ?v))
			)
		)
	)
	;@BUGFIX Crec que aqui feia falta retornar ?v -setzer22
	(return ?r)
)

(deffunction escriure-solucio (?x)
	(printout t ?x crlf crlf)
	(send ?x imprimeix)
	(printout t crlf)
)

(deffunction imprimeix-ciutats (?c)
	(loop-for-count (?i 1 (length ?c))
		(send (nth$ ?i ?c) print)
    )
)

;(deffunction imprimeix-ciutats-duracio (?c)
;	(loop-for-count (?i 1 (length ?c))
;		(bind ?aux (send (nth$ ?i ?c) get-ciutat))
;		(send (?aux:Nom) print)
;		(printout t " (")
;		(send  (nth$ ?i ?c):duracio print)
;		(printout t "), ")
;   )
;)
;
;(deffunction imprimeix-ciutats-activitats (?c)
;	(loop-for-count (?i 1 (length ?c))
;		(bind ?aux (send (nth$ ?i ?c) get-ciutat))
;		(send (?aux:Nom) print)
;		(printout t ": ")
;		(bind ?v (send (nth$ ?i ?c) get-activitats))
;			(loop-for-count (?j 1 (length ?v))
;				(send  (nth$ ?j ?v):nom-activitat print)
;				(if (< ?j (length ?v)) then
;					(printout t ", ")
;				)
;			)
;		(printout t "; ")
;   )
;)
;
;(deffunction imprimeix-ciutats-allotjament (?c)
;	(loop-for-count (?i 1 (length ?c))
;		(bind ?aux (send (nth$ ?i ?c) get-ciutat))
;		(send (?aux:Nom) print)
;		(printout t ": ")
;		(bind ?aux (send (nth$ ?i ?c) get-allotjmanet))
;		(send ?aux:nom-allotjament print)
;		(printout t ", ")
;   )
;)
;
;(deffunction imprimeix-viatges (?v)
;	(loop-for-count (?i 1 (length ?v))
;		(bind ?aux (send (nth$ ?i ?v) get-origen))
;		(send (?aux:Nom) print)
;		(printout t "-")
;		(bind ?aux (send (nth$ ?i ?v) get-desti))
;		(send (?aux:Nom) print)
;		(printout t ": ")
;		(send (nth$ ?i ?v):transport print)
;		(printout t ", ")
;   )
;)


;;		Regles

(defrule determinar-ciutat "Determinar les ciutats del viatge"
	(declare (salience 20))
	?x <- (object (is-a Solucio-F))
	(tipus_ciutats (tipus ?tc))
	(tipus_activitats (tipus ?ta))
	(cualitat_hotels (tipus ?ch))
	(num_ciutats(min ?num_ciutats_min))
	(num_dies(dies_min ?num_dies_min))
	=>
		(bind ?c (find-all-instances ((?a Ciutat))
		(and (eq ?a:Importancia ?tc) (eq (comprovar-activitats ?a:Activitats ?ta) TRUE))))
		(bind ?r (triar-ciutats ?c ?num_ciutats_min))
		(loop-for-count (?i 1 (length ?r))
			(bind ?h (buscar-hotel (nth$ ?i ?r) ?ch))
			(bind ?act (buscar_activitats (nth$ ?i ?r) ?ta ?ch (/ ?num_dies_min ?num_ciutats_min)))
   			(bind ?no-llameis-aux-a-las-variables (make-instance of Solucio-P
   			(ciutat (nth$ ?i ?r)) (duracio (/ ?num_dies_min ?num_ciutats_min))
   			(activitats ?act) (allotjament ?h) (preu (calcular-preu ?act ?h))))
   			(slot-insert$ ?x ciutats ?i ?no-llameis-aux-a-las-variables)
		)
		(halt)
)

(defrule determinar-viatge "Determina els viatges entre les ciutats"
	(declare (salience 10))
	?x <- (object (is-a Solucio-F))
	(cualitat_hotels (tipus ?ch))
	(importa_preu ?ip)
	=>
		(bind ?c (send ?x get-ciutats))
		(if (> (length ?c) 0) then
			(if (eq ?ip no) then
				(printout t ?v) (printout t crlf)
				(bind ?v (find-all-instances ((?aux Viatge)) (and (eq (send (send ?aux get-origen) get-Nom) "Origen") (eq ?aux:desti (send (nth$ 1 ?c) get-ciutat)))))
				(slot-insert$ ?x viatges 1 (viatge-alta ?v))
				(loop-for-count (?i 2 (length ?c))
					(bind ?o (send (nth$ (+ ?i -1) ?c)get-ciutat))
					(bind ?d (send (nth$ ?i ?c) get-ciutat))
					(bind ?v (find-all-instances ((?aux Viatge)) (and (eq ?aux:origen ?o) (eq ?aux:desti ?d))))
					(slot-insert$ ?x viatges ?i (viatge-alta ?v))
				)
				(printout t ?v) (printout t crlf)
				(bind ?v (find-all-instances ((?aux Viatge)) (and (eq (send (send ?aux get-desti) get-Nom) "Origen") (eq ?aux:origen (send (nth$ 1 ?c) get-ciutat)))))
				(slot-insert$ ?x viatges (+(length ?c) 1) (viatge-alta ?v))
			else
				(switch ?ch
					(case alta then
				(printout t ?v) (printout t crlf)
						(bind ?v (find-all-instances ((?aux Viatge)) (and (eq (send (send ?aux get-origen) get-Nom) "Origen") (eq ?aux:desti (send (nth$ 1 ?c) get-ciutat)))))
						(slot-insert$ ?x viatges 1 (viatge-alta ?v))
						(loop-for-count (?i 2 (length ?c))
							(bind ?o (send (nth$ (+ ?i -1) ?c)get-ciutat))
					        (bind ?d (send (nth$ ?i ?c) get-ciutat))
							(bind ?v (find-all-instances ((?aux Viatge)) (and (eq ?aux:origen ?o) (eq ?aux:desti ?d))))
							(slot-insert$ ?x viatges ?i (viatge-alta ?v))
						)
				(printout t ?v) (printout t crlf)
						(bind ?v (find-all-instances ((?aux Viatge)) (and (eq (send (send ?aux get-desti) get-Nom) "Origen") (eq ?aux:origen (send (nth$ 1 ?c) get-ciutat)))))
						(slot-insert$ ?x viatges (+(length ?c) 1) (viatge-alta ?v))
					)
					(default
				(printout t ?v) (printout t crlf)
						(bind ?v (find-all-instances ((?aux Viatge)) (and (eq (send (send ?aux get-origen) get-Nom) "Origen") (eq ?aux:desti (send (nth$ 1 ?c) get-ciutat)))))
						(slot-insert$ ?x viatges 1 (viatge-baixa ?v))
						(loop-for-count (?i 2 (length ?c))
							(bind ?o (send (nth$ (+ ?i -1) ?c)get-ciutat))
					        (bind ?d (send (nth$ ?i ?c) get-ciutat))
							(bind ?v (find-all-instances ((?aux Viatge)) (and (eq ?aux:origen ?o) (eq ?aux:desti ?d))))
							(slot-insert$ ?x viatges ?i (viatge-baixa ?v))
						)
				(printout t ?v) (printout t crlf)
						(bind ?v (find-all-instances ((?aux Viatge)) (and (eq (send (send ?aux get-desti) get-Nom) "Origen") (eq ?aux:origen (send (nth$ 1 ?c) get-ciutat)))))
						(slot-insert$ ?x viatges (+(length ?c) 1) (viatge-baixa ?v))
					)
				)
			)
		)
)

(defrule determinar-preu-duracio "Determina el preu i la duracio total"
	(declare (salience 0))
	?x <- (object (is-a Solucio-F))
	=>
		(bind ?c (send ?x get-ciutats))
		(bind ?aux1 0)
		(bind ?aux2 0)

		(loop-for-count (?i 1 (length ?c))
			(bind ?pc (nth$ ?i ?c))
			(bind ?aux1 (+ ?aux1 (send ?pc get-preu)))
			(bind ?aux2 (+ ?aux2 (send ?pc get-duracio)))
		)
		(bind ?c (send ?x get-viatges))
		(printout t "determinar-preu-duracio. SolP: ") (printout t ?x) (printout t " ") (printout t ?c) (printout t crlf)			
		(loop-for-count (?i 1 (length ?c))
			(bind ?pc (nth$ ?i ?c))
			(bind ?aux1 (+ ?aux1 (send ?pc get-preu-viatge)))
		)
		(send ?x put-preu-total ?aux1)
		(send ?x put-duracio-total ?aux2)
)

(defrule resultado-consejo "Regla salida de consejo"
	(declare (salience -10))
	?x <- (object (is-a Solucio-F))
	=>
		(escriure-solucio ?x)
		(halt)
)


;;		Handlers

(defmessage-handler Solucio-F imprimeix primary ()
	(printout t "===============================")(printout t crlf)
	(printout t "            VIATGE")(printout t crlf)
	(printout t "===============================")(printout t crlf)
	(printout t "Preu total (persona): ")
	(printout t ?self:preu-total)
	(printout t " euros" crlf)
	(printout t crlf) 
	(printout t "Duraci√≥ del viatge: ")
	(printout t ?self:duracio-total)
	(printout t " dias" crlf)
	(printout t crlf) 
	(bind ?ciutats (send ?self get-ciutats))
	(bind ?viatges (send ?self get-viatges))
	(printout t "Itinerari: ")(printout t crlf)(printout t crlf)

	(bind ?i 1)
	(loop-for-count (?i 1 (length ?ciutats))
		(bind ?viatge (nth$ ?i ?viatges)) (bind ?orig (send ?viatge get-origen)) (bind ?dest (send ?viatge get-desti))
		(printout t (send ?orig get-Nom)) (printout t " -> ") (printout t (send ?dest get-Nom)) (printout t " preu: ") 
			(printout t (send ?viatge get-preu-viatge)) (printout t " euros") (printout t crlf)

		(printout t crlf)

		(bind ?c (nth$ ?i ?ciutats))
		;for (Solucio-P c : ciutats)
		(printout t ?i) (printout t ". ") (printout t (send (send ?c get-ciutat) get-Nom)) (printout t " (") (printout t (send ?c get-duracio))
			(printout t " dies)") (printout t crlf) 
		(printout t "    Allotjament: ") (printout t (send (send ?c get-allotjament) get-nom-allotjament)) (printout t crlf)
		(printout t "    Visites: ")
		(bind ?activitats (send ?c get-activitats))
		(loop-for-count (?j 1 (length ?activitats))
			(bind ?a (nth$ ?j ?activitats))
			;for (Activitat a : ciutats)
			(printout t (send ?a get-nom-activitat)) 
			(if (neq ?j (length ?activitats)) then (printout t ", "))
		)

		(printout t crlf)
	)
		(printout t crlf)
		
		(bind ?viatge (nth$ (length ?viatges) ?viatges)) (bind ?orig (send ?viatge get-origen)) (bind ?dest (send ?viatge get-desti))
		(printout t (send ?orig get-Nom)) (printout t " -> ") (printout t (send ?dest get-Nom)) (printout t " preu: ") 
			(printout t (send ?viatge get-preu-viatge)) (printout t " euros") (printout t crlf)
)

;(defmessage-handler Solucio-F imprimeix primary ()
;	(printout t "Precio total (persona): " crlf)
;	(send ?self:preu-total print)
;	(printout t " euros" crlf)
;	(printout t crlf) 
;	(printout t "Duraci√≥n del viaje: " crlf)
;	(send ?self:duracio-total print)
;	(printout t " dias" crlf)
;	(printout t crlf) 
;	(printout t "Ciudades: " crlf)
;	(imprimeix-ciutats-duracio ?self:ciutats)
;	(printout t crlf) 
;	(printout t "Visitas: " crlf)
;	(imprimeix-ciutats-activitats ?self:ciutats)
;	(printout t crlf) 
;	(printout t "Alojamiento: " crlf)
;	(imprimeix-ciutats-allotjament ?self:ciutats)
;	(printout t crlf) 
;	(printout t "Viajes: " crlf)
;	(imprimeix-viatjes ?self:viatges)
;	(printout t crlf) 
;)