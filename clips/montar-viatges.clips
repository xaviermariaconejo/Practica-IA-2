; Input <- output(acotar-ciutats)
; Output -> Dos viatges montats amb el format de l'enunciat


;;		Declaracions i Inicialitzacions



(defmodule fer-solucio "Fa una instancia de solucio" 
	(export deftemplate ?ALL)
	(import tipus_ciutat deftemplate ?ALL)
    (import tipus_usuari deftemplate ?ALL)
	(import preferencies deftemplate ?ALL)
    (import utils deffunction ?ALL)
    (import ontologia defclass ?ALL)
)


(definstances solucions
	([Possible-Solucio1] of Solucio-F (preu-total 0) (duracio-total 0))
	([Possible-Solucio2] of Solucio-F (preu-total 0) (duracio-total 0))
)


;;		Regles

(defrule determinar-ciutat "Determinar les ciutats del viatge"
	(declare (salience 20))
	?x <- (object (is-a Solucio-F))
	(tipus_ciutats (tipus ?tc))
	(tipus_activitats (tipus ?ta))
	(cualitat_hotels (tipus ?ch))
	(importa_preu ?ip)
	=>
		(bind ?c (find-all-instances ((?a Ciutat))
		(eq (str-cat (?a:Importancia)) ?tc) (comprobar-activitats ?a:activitats get-nom-activitat ?ta)))
		(bind ?r (triar-ciutats ?c get-nom (num_ciutats(min))))
		(loop-for-count (?i 1 (length ?r))
			(bind ?h (buscar-hotel (nth$ ?i ?r) ?ch ?ip))
   			(make-instance [aux] of Solucio-P
   			(ciutat (nth$ ?i ?r)) (duracio (/ (num_dies(dies_min)) num_ciutats(min)))
   			(activitats ?ta) (allotjament ?h) (preu (calcular-preu ?ta ?h)))
   			(slot-insert$ ?x ciutats ?i aux)
		)
)

(defrule determinar-viatge "Determina els viatges entre les ciutats"
	(declare (salience 10))
	?x <- (object (is-a Solucio-F))
	(cualitat_hotels (tipus ?ch))
	(importa_preu ?ip)
	=>
		(bind ?c (send ?x get-ciutats))
		(if (eq ?ip no) then
			(bind ?v (find-all-instances ((?aux Viatge)) (eq ?aux:origen Origen) (eq ?aux:desti (nth$ 1 ?c))))
			(slot-insert$ ?x viatges 1 (viatge-alta(?v)))
			(loop-for-count (?i 2 (+ (length ?c) -1))
				(bind ?o (nth$ (+ ?i -1) ?c))
				(bind ?d (nth$ ?i ?c))
				(bind ?v (find-all-instances ((?aux Viatge)) (eq ?aux:origen ?o) (eq ?aux:desti ?d)))
				(slot-insert$ ?x viatges ?i (viatge-alta(?v)))
			)
			(bind ?v (find-all-instances ((?aux Viatge)) 
			(eq ?aux:origen (nth$ (length ?c) ?c)) (eq ?aux:desti Origen)))
			(slot-insert$ ?x viatges (length ?c) (viatge-alta(?v)))
		else
			(switch ?ch
				(case alta then
					(bind ?v (find-all-instances ((?aux Viatge)) (eq ?aux:origen Origen) (eq ?aux:desti (nth$ 1 ?c))))
					(slot-insert$ ?x viatges 1 (viatge-alta(?v)))
					(loop-for-count (?i 2 (+ (length ?c) -1))
						(bind ?o (nth$ (+ ?i -1) ?c))
						(bind ?d (nth$ ?i ?c))
						(bind ?v (find-all-instances ((?aux Viatge)) (eq ?aux:origen ?o) (eq ?aux:desti ?d)))
						(slot-insert$ ?x viatges ?i (viatge-alta(?v)))
					)
					(bind ?v (find-all-instances ((?aux Viatge)) 
					(eq ?aux:origen (nth$ (length ?c) ?c)) (eq ?aux:desti Origen)))
					(slot-insert$ ?x viatges (length ?c) (viatge-alta(?v)))
				)
				(default
					(bind ?v (find-all-instances ((?aux Viatge)) (eq ?aux:origen Origen) (eq ?aux:desti (nth$ 1 ?c))))
					(slot-insert$ ?x viatges 1 (viatge-baixa(?v)))
					(loop-for-count (?i 2 (+ (length ?c) -1))
						(bind ?o (nth$ (+ ?i -1) ?c))
						(bind ?d (nth$ ?i ?c))
						(bind ?v (find-all-instances ((?aux Viatge)) (eq ?aux:origen ?o) (eq ?aux:desti ?d)))
						(slot-insert$ ?x viatges ?i (viatge-baixa(?v)))
					)
					(bind ?v (find-all-instances ((?aux Viatge)) 
					(eq ?aux:origen (nth$ (length ?c) ?c)) (eq ?aux:desti Origen)))
					(slot-insert$ ?x viatges (length ?c) (viatge-baixa(?v)))
				)
			)
		)
)

(defrule determinar-preu-duracio "Determina el preu i la duracio total"
	(declare (salience 0))
	?x <- (object (is-a Solucio-F))
	=>
		(bind ?c (send ?x get-ciutats))
		(bind ?aux1 0)
		(bind ?aux2 0)
		(loop-for-count (?i 1 (length ?c))
			(bind ?pc (nth$ ?i ?c))
			(modify ?aux1 (+ ?aux1 (send ?pc get-preu)))
			(modify ?aux2 (+ ?aux2 (send ?pc get-duracio)))
		)
		(bind ?c (send ?x get-viatges))
		(loop-for-count (?i 1 (length ?c))
			(bind ?aux (nth$ ?i ?c))
			(modify ?aux1 (+ ?aux1 (send ?pc get-preu-viatge)))
		)
		(send ?x put-preu-total ?aux1)
		(send ?x put-duracio-total ?aux2)
)

(deffunction escriure-solucio (?x)
	(printout t ?x crlf crlf)
	(send ?x imprimeix)
	(printout t crlf)
	(halt)
)

(defrule resultado-consejo "Regla salida de consejo"
	(declare (salience -10))
	?x <- (object (is-a Solucio-F))
	=>
		(escriure-solucio ?x)
)


;;		Funcions

(deffunction comprovar-activitats (?li ?sl ?a)
	(bind ?b FALSE)
	(bind ?i 1)
	(while (and (<= ?i (length ?li)) (not ?b))
		do
		(bind ?b (eq (send (nth$ ?i ?li) ?sl) ?a))
		(bind ?i (+ ?i 1))
	)
	(return ?b)
)

(deffunction triar-ciutats (?li ?n)
	(if (> ?n (length ?li)) then
		(return ?li)
	else 
		(bind ?v (create$))
		(loop-for-count (?i 1 ?n)
			(bind ?aux (random 1 (length ?li)))
			(insert$ ?v 1 (nth$ ?aux ?li))
			(delete$ ?li ?aux ?aux)
		)
		(return ?v)
	)
)

(deffunction buscar-hotel (?c ?ch ?ip)
	(bind ?a (send ?c get-Allotjaments))
	(if (eq ?ip no) then
		(if (> (length ?c) 0) then
			(bind ?h (nth$ 1 ?a))
			(loop-for-count (?i 2 (length ?a))
				(if (> (send (nth$ ?i ?a) get-preu-allotjament) (send ?h get-preu-allotjament))
					then (bind ?h (nth$ ?i ?a)))
			)
		)
	else
		(bind ?i 1)
		(bind ?b FALSE)
		(switch ?ch
			(case alta then
				(while (and (<= ?i (length ?a)) (not ?b))
					do
					(if (or (eq (str-cat (class (nth$ ?i ?a))) "5Estrella") 
							(eq (str-cat (class (nth$ ?i ?a))) "4Estrella")) then
							(bind ?h (nth$ ?i ?a))
							(bind ?b TRUE)
							(bind ?i (+ ?i 1))
					)
				)
			)
			(case mitja then
				(while (and (<= ?i (length ?a)) (not ?b))
					do
					(if (or (eq (str-cat (class (nth$ ?i ?a))) "4Estrella") 
							(eq (str-cat (class (nth$ ?i ?a))) "3Estrella")
							(eq (str-cat (class (nth$ ?i ?a))) "2Estrella")) then
							(bind ?h (nth$ ?i ?a))
							(bind ?b TRUE)
							(bind ?i (+ ?i 1))
					)
				)
			)
			(case baixa then
				(while (and (<= ?i (length ?a)) (not ?b))
					do
					(if (or (eq (str-cat (class (nth$ ?i ?a))) "1Estrella") 
							(eq (str-cat (class (nth$ ?i ?a))) "2Estrella")) then
							(bind ?h (nth$ ?i ?a))
							(bind ?b TRUE)
							(bind ?i (+ ?i 1))
					)
				)
			)
		)
	)
	(return ?h)
)

(deffunction calcular-preu (?a ?h)
	(bind ?pa (send ?a get-preu-activitat))
	(bind ?ph (send ?h get-preu-allotjmanet))
	(return (+ ?pa ?ph))
)

(deffunction viatge-alta (?v)
	(if (> (length ?v) 0) then
		(bind ?r (nth$ 1 ?v))
		(loop-for-count (?i 2 (length ?v))
			(if (> (send (nth$ ?i ?v) get-preu-viatge) (send ?r get-preu-viatge)) then
				(bind ?r (nth$ ?i ?v))
			)
		)
	)
)

(deffunction viatge-baixa (?v)
	(if (> (length ?v) 0) then
		(bind ?r (nth$ 1 ?v))
		(loop-for-count (?i 2 (length ?v))
			(if (< (send (nth$ ?i ?v) get-preu-viatge) (send ?r get-preu-viatge)) then
				(bind ?r (nth$ ?i ?v))
			)
		)
	)
)

(deffunction imprimeix-ciutats (?c)
	(loop-for-count (?i 1 (length ?c))
		(send (nth$ ?i ?c) print)
    )
)

;(deffunction imprimeix-ciutats-duracio (?c)
;	(loop-for-count (?i 1 (length ?c))
;		(bind ?aux (send (nth$ ?i ?c) get-ciutat))
;		(send (?aux:Nom) print)
;		(printout t " (")
;		(send  (nth$ ?i ?c):duracio print)
;		(printout t "), ")
;   )
;)
;
;(deffunction imprimeix-ciutats-activitats (?c)
;	(loop-for-count (?i 1 (length ?c))
;		(bind ?aux (send (nth$ ?i ?c) get-ciutat))
;		(send (?aux:Nom) print)
;		(printout t ": ")
;		(bind ?v (send (nth$ ?i ?c) get-activitats))
;			(loop-for-count (?j 1 (length ?v))
;				(send  (nth$ ?j ?v):nom-activitat print)
;				(if (< ?j (length ?v)) then
;					(printout t ", ")
;				)
;			)
;		(printout t "; ")
;   )
;)
;
;(deffunction imprimeix-ciutats-allotjament (?c)
;	(loop-for-count (?i 1 (length ?c))
;		(bind ?aux (send (nth$ ?i ?c) get-ciutat))
;		(send (?aux:Nom) print)
;		(printout t ": ")
;		(bind ?aux (send (nth$ ?i ?c) get-allotjmanet))
;		(send ?aux:nom-allotjament print)
;		(printout t ", ")
;   )
;)
;
;(deffunction imprimeix-viatges (?v)
;	(loop-for-count (?i 1 (length ?v))
;		(bind ?aux (send (nth$ ?i ?v) get-origen))
;		(send (?aux:Nom) print)
;		(printout t "-")
;		(bind ?aux (send (nth$ ?i ?v) get-desti))
;		(send (?aux:Nom) print)
;		(printout t ": ")
;		(send (nth$ ?i ?v):transport print)
;		(printout t ", ")
;   )
;)
;
;
;;		Handlers

(defmessage-handler Solucio-F imprimeix primary ()
	(printout t "Precio total (persona): ")
	(send ?self:preu-total print)
	(printout t " euros" crlf)
	(printout t crlf) 
	(printout t "Duración del viaje: ")
	(send ?self:duracio-total print)
	(printout t " dias" crlf)
	(printout t crlf) 
	(printout t "Ciudades: ")
	(imprimeix-ciutats ?self:ciutats)
	(printout t crlf) 
	(printout t "Visitas: ")
	(imprimeix-ciutats ?self:ciutats)
	(printout t crlf) 
	(printout t "Alojamiento: ")
	(imprimeix-ciutats ?self:ciutats)
	(printout t crlf) 
	(printout t "Viajes: ")
	(imprimeix-ciutats ?self:viatges)
	(printout t crlf) 
)

;(defmessage-handler Solucio-F imprimeix primary ()
;	(printout t "Precio total (persona): ")
;	(send ?self:preu-total print)
;	(printout t " euros" crlf)
;	(printout t crlf) 
;	(printout t "Duración del viaje: ")
;	(send ?self:duracio-total print)
;	(printout t " dias" crlf)
;	(printout t crlf) 
;	(printout t "Ciudades: ")
;	(imprimeix-ciutats-duracio ?self:ciutats)
;	(printout t crlf) 
;	(printout t "Visitas: ")
;	(imprimeix-ciutats-activitats ?self:ciutats)
;	(printout t crlf) 
;	(printout t "Alojamiento: ")
;	(imprimeix-ciutats-allotjament ?self:ciutats)
;	(printout t crlf) 
;	(printout t "Viajes: ")
;	(imprimeix-viatjes ?self:viatges)
;	(printout t crlf) 
;)